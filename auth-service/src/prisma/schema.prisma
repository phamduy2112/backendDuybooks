generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id                 Int       @id @default(autoincrement())
  full_name          String?   @db.VarChar(50)
  email              String?   @unique @db.VarChar(100)
  password           String?   @db.VarChar(255)
  phone_number       String?   @db.VarChar(10)
  avatar_url         String?
  nick_name          String?   @db.VarChar(100)
  birth_date         DateTime? @db.Date
  marriage_condition String?
  role               String?   @default("customer") @db.VarChar(50)
  status             String?   @default("active") @db.VarChar(20)
  bio                String?
  created_at         DateTime? @default(now()) @db.Timestamp(6)
  code               code[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model friends {
  id         Int       @id @default(autoincrement())
  user_id    Int
  friend_id  Int
  status     String?   @default("pending") @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(6)

  @@unique([user_id, friend_id], map: "unique_friendship")
}

model notifications {
  id         Int       @id @default(autoincrement())
  user_id    Int
  message    String?
  type       String?   @db.VarChar(50)
  status     String?   @default("unread") @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(6)
}

model code {
  id         Int       @id @default(autoincrement())
  user_id    Int
  code       String    @db.VarChar(255)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  users      users     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
